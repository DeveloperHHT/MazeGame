
org 100h

#START=Emulation_Kit.exe#  

MOV DX,2000h
MOV BX, 0

NEXT:
	MOV AL,MAZE[BX]
	out DX,AL
	INC DX
	ADD BX, 1
	CMP BX, 40
	JNE NEXT
    MOV BX, 0 

START:
    
    Call READ    
    CMP AH, 4Dh
    JE Right
    CMP AH, 4Bh
    JE Left
    CMP AH, 48h
    JE Up
    CMP AH, 50h
    JE Down
    JMP START 
    
UP:
    MOV AL, STATE
    SHR AL, 1
    TEST AL, MAZE[BX]
    JNZ START
    CMP AL, 1
    JB START 
    ADD MAZE[BX], AL
    MOV AH, STATE
    SUB MAZE[BX], AH
    MOV STATE, AL
    PUSH BX
    CALL UPD_MAZE
    POP BX
    JMP START


DOWN:
    MOV AL, STATE
    SHL AL, 1
    TEST AL, MAZE[BX]
    JNZ START
    CMP AL, 127
    JA START
    ADD MAZE[BX], AL
    MOV AH, STATE
    SUB MAZE[BX], AH
    MOV STATE, AL
    PUSH BX
    CALL UPD_MAZE
    POP BX
    JMP START

RIGHT:
    MOV AL, STATE
    TEST AL, MAZE[BX+1]
    JNZ START
    ADD MAZE[BX+1], AL
    SUB MAZE[BX], AL
    INC BX
    PUSH BX
    DEC BX
    CALL UPD_MAZE
    POP BX
    JMP START 
    
LEFT:
    MOV AL, STATE
    TEST AL, MAZE[BX-1]
    JNZ START
    ADD MAZE[BX-1], AL
    SUB MAZE[BX], AL
    DEC BX
    PUSH BX
    INC BX
    CALL UPD_MAZE
    POP BX
    JMP START


END:
ret

MAZE db 0001000B ,0000000B, 0000000B, 0000000B, 0000000B,1110111B, 1000001B, 1111001B, 1111011B, 1000001B, 1011111B,1011111B, 1010001B, 1010101B, 1000101B, 1111101B, 1000101B,1010001B, 1010101B, 1010101B, 1100011B, 1000001B, 1011101B,1011101B, 1011101B, 1001001B, 1000101B, 1011101B, 1100001B,1101111B, 1000001B, 1010101B, 1010101B, 1010101B, 1111101b,0000000B, 0000000B, 0000000B, 0000000B, 0000000B 
 
STATE db 0001000B

UPD_MAZE PROC 
    MOV DX,2000h
    DEC BX
    ADD DX, BX
    MOV CX, 3
    UPDLOOP:
    	MOV AL,MAZE[BX]
    	out DX,AL
    	INC DX    
    	INC BX
    	LOOP UPDLOOP
    ret
ENDP

READ PROC
    MOV AH, 00h
    INT 16h
    ret
ENDP